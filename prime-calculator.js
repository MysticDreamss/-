document.addEventListener('DOMContentLoaded', () => {
  const accounts = [];
  const cases = [];
  const skins = [];

  // –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
  const accountModal = document.getElementById('account-modal');
  const caseModal = document.getElementById('case-modal');
  const skinModal = document.getElementById('skin-modal');

  // –ö–Ω–æ–ø–∫–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
  document.getElementById('add-account-btn').addEventListener('click', () => {
    // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é
    document.getElementById('account-form').reset();
    accountModal.dataset.mode = 'add'; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    document.querySelector('#account-modal h2').textContent = '–î–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç';
    document.querySelector('#account-form button[type="submit"]').textContent = '–î–æ–±–∞–≤–∏—Ç—å';
    accountModal.style.display = 'block';
  });

  document.getElementById('add-case-btn').addEventListener('click', () => {
    document.getElementById('case-form').reset();
    caseModal.dataset.mode = 'add';
    document.querySelector('#case-modal h2').textContent = '–î–æ–±–∞–≤–∏—Ç—å –∫–µ–π—Å';
    document.querySelector('#case-form button[type="submit"]').textContent = '–î–æ–±–∞–≤–∏—Ç—å';
    caseModal.style.display = 'block';
  });

  document.getElementById('add-skin-btn').addEventListener('click', () => {
    document.getElementById('skin-form').reset();
    skinModal.dataset.mode = 'add';
    document.querySelector('#skin-modal h2').textContent = '–î–æ–±–∞–≤–∏—Ç—å —Å–∫–∏–Ω';
    document.querySelector('#skin-form button[type="submit"]').textContent = '–î–æ–±–∞–≤–∏—Ç—å';
    skinModal.style.display = 'block';
  });

  // –ö–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
  document.getElementById('close-account-modal').addEventListener('click', () => {
    accountModal.style.display = 'none';
  });
  document.getElementById('close-case-modal').addEventListener('click', () => {
    caseModal.style.display = 'none';
  });
  document.getElementById('close-skin-modal').addEventListener('click', () => {
    skinModal.style.display = 'none';
  });

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞
  document.getElementById('account-form').addEventListener('submit', (e) => {
    e.preventDefault();
   const nickname = document.getElementById('account-nickname').value;
   const balance = parseFloat(document.getElementById('account-balance').value);

    const mode = accountModal.dataset.mode;
    const index = parseInt(accountModal.dataset.editIndex); // –ü–æ–ª—É—á–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

    if (mode === 'add') {
      accounts.push({ nickname, balance });
    } else if (mode === 'edit' && !isNaN(index) && accounts[index]) {
      accounts[index].nickname = nickname;
      accounts[index].balance = balance;
    }

    displayAccounts();
    accountModal.style.display = 'none';
    document.getElementById('account-form').reset();
  });

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–µ–π—Å–∞
  document.getElementById('case-form').addEventListener('submit', (e) => {
    e.preventDefault();
    const name = document.getElementById('case-name').value;
    const quantity = parseInt(document.getElementById('case-quantity').value);
    const price = parseFloat(document.getElementById('case-price').value);
    const mode = caseModal.dataset.mode;
    const index = parseInt(caseModal.dataset.editIndex);

    if (mode === 'add') {
      cases.push({ name, quantity, price });
    } else if (mode === 'edit' && !isNaN(index) && cases[index]) {
      cases[index].name = name;
      cases[index].quantity = quantity;
      cases[index].price = price;
    }

    displayCases();
    caseModal.style.display = 'none';
    document.getElementById('case-form').reset();
  });

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–∏–Ω–∞
  document.getElementById('skin-form').addEventListener('submit', (e) => {
    e.preventDefault();
    const name = document.getElementById('skin-name').value;
    const quantity = parseInt(document.getElementById('skin-quantity').value);
    const price = parseFloat(document.getElementById('skin-price').value);
    const mode = skinModal.dataset.mode;
    const index = parseInt(skinModal.dataset.editIndex);

    if (mode === 'add') {
      skins.push({ name, quantity, price });
    } else if (mode === 'edit' && !isNaN(index) && skins[index]) {
      skins[index].name = name;
      skins[index].quantity = quantity;
      skins[index].price = price;
    }

    displaySkins();
    skinModal.style.display = 'none';
    document.getElementById('skin-form').reset();
  });


  // --- –§—É–Ω–∫—Ü–∏–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö --- //
  function displayAccounts() {
    const accountsList = document.getElementById('accounts-list');
    accountsList.innerHTML = '';
    if (accounts.length === 0) {
      accountsList.innerHTML = '<p>–ê–∫–∫–∞—É–Ω—Ç—ã –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.</p>';
      return;
    }
    accounts.forEach((acc, index) => {
      accountsList.innerHTML += `
        <div class="item">
          <strong>üî∏ –ê–∫–∫–∞—É–Ω—Ç: ${acc.nickname}</strong><br/>
          –ë–∞–ª–∞–Ω—Å: ${acc.balance.toFixed(2)} –≥—Ä–Ω
          <div class="item-actions">
            <button class="edit-btn" data-type="account" data-index="${index}">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
            <button class="delete-btn" data-type="account" data-index="${index}">‚ùå –£–¥–∞–ª–∏—Ç—å</button>
          </div>
        </div>
      `;
    });
    addEventListenersToItemButtons(); // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è DOM
  }

  function displayCases() {
    const casesList = document.getElementById('cases-list');
    casesList.innerHTML = '';
    if (cases.length === 0) {
      casesList.innerHTML = '<p>–ö–µ–π—Å—ã –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.</p>';
      return;
    }
    cases.forEach((c, index) => {
      casesList.innerHTML += `
        <div class="item">
          <strong>üéÅ –ö–µ–π—Å: ${c.name}</strong><br/>
          –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${c.quantity}<br/>
          –¶–µ–Ω–∞ –∑–∞ —à—Ç.: ${c.price.toFixed(2)} –≥—Ä–Ω
          <div class="item-actions">
            <button class="edit-btn" data-type="case" data-index="${index}">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
            <button class="delete-btn" data-type="case" data-index="${index}">‚ùå –£–¥–∞–ª–∏—Ç—å</button>
          </div>
        </div>
      `;
    });
    addEventListenersToItemButtons();
  }

  function displaySkins() {
    const skinsList = document.getElementById('skins-list');
    skinsList.innerHTML = '';
    if (skins.length === 0) {
      skinsList.innerHTML = '<p>–°–∫–∏–Ω—ã –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.</p>';
      return;
    }
    skins.forEach((s, index) => {
      skinsList.innerHTML += `
        <div class="item">
          <strong>üéØ –°–∫–∏–Ω: ${s.name}</strong><br/>
          –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${s.quantity}<br/>
          –¶–µ–Ω–∞ –∑–∞ —à—Ç.: ${s.price.toFixed(2)} –≥—Ä–Ω
          <div class="item-actions">
            <button class="edit-btn" data-type="skin" data-index="${index}">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
            <button class="delete-btn" data-type="skin" data-index="${index}">‚ùå –£–¥–∞–ª–∏—Ç—å</button>
          </div>
        </div>
      `;
    });
    addEventListenersToItemButtons();
  }

  // --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª—É—à–∞—Ç–µ–ª–µ–π –∫ –∫–Ω–æ–ø–∫–∞–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è ---
  function addEventListenersToItemButtons() {
    // –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    document.querySelectorAll('.edit-btn').forEach(button => {
      button.onclick = (e) => { // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ onclick, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        const type = e.target.dataset.type;
        const index = parseInt(e.target.dataset.index);
        
        if (type === 'account') {
          const acc = accounts[index];
          document.getElementById('account-nickname').value = acc.nickname;
          document.getElementById('account-balance').value = acc.balance;
          accountModal.dataset.mode = 'edit';
          accountModal.dataset.editIndex = index;
          document.querySelector('#account-modal h2').textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç';
          document.querySelector('#account-form button[type="submit"]').textContent = '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è';
          accountModal.style.display = 'block';
        } else if (type === 'case') {
          const c = cases[index];
          document.getElementById('case-name').value = c.name;
          document.getElementById('case-quantity').value = c.quantity;
          document.getElementById('case-price').value = c.price;
          caseModal.dataset.mode = 'edit';
          caseModal.dataset.editIndex = index;
          document.querySelector('#case-modal h2').textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–µ–π—Å';
          document.querySelector('#case-form button[type="submit"]').textContent = '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è';
          caseModal.style.display = 'block';
        } else if (type === 'skin') {
          const s = skins[index];
          document.getElementById('skin-name').value = s.name;
          document.getElementById('skin-quantity').value = s.quantity;
          document.getElementById('skin-price').value = s.price;
          skinModal.dataset.mode = 'edit';
          skinModal.dataset.editIndex = index;
          document.querySelector('#skin-modal h2').textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∫–∏–Ω';
          document.querySelector('#skin-form button[type="submit"]').textContent = '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è';
          skinModal.style.display = 'block';
        }
      };
    });

    // –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ —É–¥–∞–ª–µ–Ω–∏—è
    document.querySelectorAll('.delete-btn').forEach(button => {
      button.onclick = (e) => { // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ onclick
        if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç?')) {
            return;
        }
        const type = e.target.dataset.type;
        const index = parseInt(e.target.dataset.index);

        if (type === 'account') {
          accounts.splice(index, 1);
          displayAccounts();
        } else if (type === 'case') {
          cases.splice(index, 1);
          displayCases();
        } else if (type === 'skin') {
          skins.splice(index, 1);
          displaySkins();
        }
      };
    });
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  displayAccounts();
  displayCases();
  displaySkins();

  // --- –õ–æ–≥–∏–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ ---
  document.getElementById('distribute-btn').addEventListener('click', () => {
    const primePrice = parseFloat(document.getElementById('prime-price').value);
    const reserve = parseFloat(document.getElementById('reserve').value);

    if (isNaN(primePrice) || isNaN(reserve) || primePrice <= 0) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä–∞–π–º–∞ –∏ –∑–∞–ø–∞—Å–∞.');
      return;
    }

    if (accounts.length === 0) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∞–∫–∫–∞—É–Ω—Ç.');
      return;
    }

    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Ü–µ–Ω–µ –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
    const allItems = [
      ...cases.map(item => ({ ...item, type: 'case', initialQuantity: item.quantity })),
      ...skins.map(item => ({ ...item, type: 'skin', initialQuantity: item.quantity }))
    ].sort((a, b) => b.price - a.price); // –°–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Ç –¥–æ—Ä–æ–≥–∏—Ö –∫ –¥–µ—à–µ–≤—ã–º

    const totalNeeded = accounts.map(acc => {
      const needed = Math.max(0, primePrice + reserve - acc.balance);
      return {
        ...acc,
        needed: needed > 0 ? needed : 0, // –ï—Å–ª–∏ –±–∞–ª–∞–Ω—Å —É–∂–µ –¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω, –Ω—É–∂–Ω–æ 0
        items: [],
        sumItems: 0 // –°—É–º–º–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–π–¥—É—Ç –Ω–∞ —ç—Ç–æ—Ç –∞–∫–∫–∞—É–Ω—Ç
      };
    }).sort((a, b) => b.needed - a.needed); // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∞–∫–∫–∞—É–Ω—Ç—ã –ø–æ —É–±—ã–≤–∞–Ω–∏—é "–Ω—É–∂–Ω–æ—Å—Ç–∏"

    // –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –ø–æ –∞–∫–∫–∞—É–Ω—Ç–∞–º
// –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–æ–º–∏—Å—Å–∏—é —Ä—ã–Ω–∫–∞ –∫–æ –≤—Å–µ–º –ø—Ä–µ–¥–º–µ—Ç–∞–º –∑–∞—Ä–∞–Ω–µ–µ –∏ –≥–æ—Ç–æ–≤–∏–º –ø–ª–æ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
    let distributableItems = []; //
    const marketFee = parseFloat(document.getElementById('market-fee').value); // –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–∏—Å—Å–∏—é —Ä—ã–Ω–∫–∞ –æ–¥–∏–Ω —Ä–∞–∑

    cases.forEach(c => { //
      for (let i = 0; i < c.quantity; i++) { //
        const netPrice = c.price * (1 - marketFee / 100); // –í—ã—á–∏—Å–ª—è–µ–º —á–∏—Å—Ç—É—é —Ü–µ–Ω—É –æ–¥–∏–Ω —Ä–∞–∑
        distributableItems.push({ type: 'case', name: c.name, price: c.price, netPrice: netPrice }); //
      }
    });
    skins.forEach(s => { //
      for (let i = 0; i < s.quantity; i++) { //
        const netPrice = s.price * (1 - marketFee / 100); // –í—ã—á–∏—Å–ª—è–µ–º —á–∏—Å—Ç—É—é —Ü–µ–Ω—É –æ–¥–∏–Ω —Ä–∞–∑
        distributableItems.push({ type: 'skin', name: s.name, price: s.price, netPrice: netPrice }); //
      }
    });

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –ø–æ —á–∏—Å—Ç–æ–π —Ü–µ–Ω–µ –≤ –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è
    distributableItems.sort((a, b) => b.netPrice - a.netPrice); //

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∞–∫–∫–∞—É–Ω—Ç—ã –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π —Å—É–º–º–µ –≤ –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è
    totalNeeded.sort((a, b) => b.needed - a.needed); //

    // –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –ø–æ –∞–∫–∫–∞—É–Ω—Ç–∞–º
    for (const acc of totalNeeded) { //
      if (acc.needed <= 0) continue; // –ï—Å–ª–∏ –∞–∫–∫–∞—É–Ω—Ç —É–∂–µ –ø–æ–∫—Ä—ã—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º

      let currentSumForAccount = 0; //
      for (let i = 0; i < distributableItems.length; ) { //
        const item = distributableItems[i]; //

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ (—Å —É—á–µ—Ç–æ–º –µ–≥–æ —á–∏—Å—Ç–æ–π —Ü–µ–Ω—ã) —Ç—Ä–µ–±—É–µ–º–æ–π —Å—É–º–º–µ + –Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–ø—É—Å–∫
        if (currentSumForAccount + item.netPrice <= acc.needed + 2) { // +2 - –Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–ø—É—Å–∫ –¥–ª—è –æ–∫—Ä—É–≥–ª–µ–Ω–∏–π
          acc.items.push(item); //
          currentSumForAccount += item.netPrice; //
          distributableItems.splice(i, 1); // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –æ–±—â–µ–≥–æ –ø—É–ª–∞
        } else {
          i++; // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –ø—Ä–µ–¥–º–µ—Ç—É, –µ—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Å–ª–∏—à–∫–æ–º –¥–æ—Ä–æ–≥
        }

        if (currentSumForAccount >= acc.needed) break; // –ï—Å–ª–∏ –¥–ª—è —ç—Ç–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ —Å–æ–±—Ä–∞–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É
      }
      acc.sumItems = currentSumForAccount; //
    }

    // –ü–æ—Å–ª–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –ø—Ä–µ–¥–º–µ—Ç—ã –≤ 'distributableItems' –Ω–µ –±—ã–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã.
    const remainingItems = distributableItems; // –≠—Ç–æ –ø—Ä–µ–¥–º–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –±—ã–ª–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã


    // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    const resultsDiv = document.getElementById('results');
    resultsDiv.innerHTML = '';
    let totalCollectedFromItems = 0;
    let totalPrimePurchases = 0;

   totalNeeded.forEach(acc => {
      // ... (–∫–æ–¥ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ - –æ—Å—Ç–∞–≤–ª—è–µ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...
      const groupedAccountItems = acc.items.reduce((accGroup, item) => {
        const key = `${item.type}-${item.name}-${item.price.toFixed(2)}`;
        if (!accGroup[key]) {
          accGroup[key] = { ...item, count: 0, totalOriginalPrice: 0, totalNetPrice: 0 };
        }
        accGroup[key].count++;
        accGroup[key].totalOriginalPrice += item.price;
        accGroup[key].totalNetPrice += item.netPrice;
        return accGroup;
      }, {});

      const displayAccountItems = Object.values(groupedAccountItems);

      let –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫–¢–µ–∫—Å—Ç = '';
      if (acc.sumItems < acc.needed) {
          const –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ = acc.needed - acc.sumItems;
          –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫–¢–µ–∫—Å—Ç = `–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –ø–æ–ª–Ω–æ–π –æ–ø–ª–∞—Ç—ã. –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç: ${–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫.toFixed(2)} –≥—Ä–Ω`;
      }

      // –ù–û–í–û–ï: –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–∞–Ω—Å
      const finalBalance = acc.balance + acc.sumItems;


      resultsDiv.innerHTML += `<div class="item">
        <strong>üî∏ –ê–∫–∫–∞—É–Ω—Ç: ${acc.nickname}</strong><br/>
        –ë–∞–ª–∞–Ω—Å: ${acc.balance.toFixed(2)} –≥—Ä–Ω<br/>
        –ù—É–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å: ${acc.needed.toFixed(2)} –≥—Ä–Ω<br/>
        –ü—Ä–µ–¥–º–µ—Ç–æ–≤ –≤—ã–¥–µ–ª–µ–Ω–æ –Ω–∞ —Å—É–º–º—É: ${acc.sumItems.toFixed(2)} –≥—Ä–Ω<br/>
        ${–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫–¢–µ–∫—Å—Ç ? `<span style="color: red;">${–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫–¢–µ–∫—Å—Ç}</span><br/>` : ''}
        <strong>–ò—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –±—É–¥–µ—Ç: ${finalBalance.toFixed(2)} –≥—Ä–Ω</strong><br/>
        <ul>` + displayAccountItems.map(item => `<li>${item.type === 'case' ? 'üéÅ' : 'üéØ'} ${item.name} x${item.count} ‚Äî ${item.totalOriginalPrice.toFixed(2)} –≥—Ä–Ω (—Å —É—á—ë—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏: ${item.totalNetPrice.toFixed(2)} –≥—Ä–Ω)</li>`).join('') + `</ul>
      </div>`;
    });
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è "–ª–∏—à–Ω–∏–µ" –ø—Ä–µ–¥–º–µ—Ç—ã
// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è "–ª–∏—à–Ω–∏–µ" –ø—Ä–µ–¥–º–µ—Ç—ã
// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è "–ª–∏—à–Ω–∏–µ" –ø—Ä–µ–¥–º–µ—Ç—ã
    if (remainingItems.length > 0) {
      // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –ø—Ä–µ–¥–º–µ—Ç—ã –ø–æ —Ç–∏–ø—É –∏ –Ω–∞–∑–≤–∞–Ω–∏—é
      const groupedRemainingItems = remainingItems.reduce((acc, item) => {
        const key = `${item.type}-${item.name}`;
        if (!acc[key]) {
          acc[key] = { ...item, count: 0 };
        }
        acc[key].count++;
        return acc;
      }, {});

      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –º–∞—Å—Å–∏–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const displayRemainingItems = Object.values(groupedRemainingItems);

      resultsDiv.innerHTML += `
        <div class="item" style="margin-top:20px;">
          <strong>–û—Å—Ç–∞–≤—à–∏–µ—Å—è –ø—Ä–µ–¥–º–µ—Ç—ã (–Ω–µ –ø–æ–Ω–∞–¥–æ–±–∏–ª–∏—Å—å –¥–ª—è –ø—Ä–∞–π–º–∞):</strong>
          <ul>
            ${displayRemainingItems.map(item => `<li>${item.type === 'case' ? 'üéÅ' : 'üéØ'} ${item.name} x${item.count} ‚Äî ${(item.price * item.count).toFixed(2)} –≥—Ä–Ω</li>`).join('')}
          </ul>
        </div>
      `;
    }

    // –û–±—â–∞—è —Å–≤–æ–¥–∫–∞
    const totalSummaryDiv = document.getElementById('total-summary');
    totalSummaryDiv.innerHTML = `
        <div class="item" style="text-align: center; font-size: 1.2rem; margin-top: 30px; background-color: #3b3f54;">
            <strong>üí∏ –û–±—â–∞—è —Å–≤–æ–¥–∫–∞:</strong><br/>
            –°–æ–±—Ä–∞–Ω–æ —Å –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${totalCollectedFromItems.toFixed(2)} –≥—Ä–Ω<br/>
            –í—Å–µ–≥–æ –ø—Ä–∞–π–º–æ–≤ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å: ${totalPrimePurchases} —à—Ç.<br/>
        </div>
    `;
  });

});



// === –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –±–ª–∏–∫–æ–≤ –Ω–∞ —Ñ–æ–Ω–µ ===
function createBlink() {
  const blink = document.createElement('div');
  blink.classList.add('blink');

  // –°–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è
  const x = Math.random() * window.innerWidth;
  const y = Math.random() * window.innerHeight;

  blink.style.left = `${x}px`;
  blink.style.top = `${y}px`;

  // –ê–Ω–∏–º–∞—Ü–∏—è
  blink.style.animation = `fadeInOutBlink 2s ease-out`;

  // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
  const container = document.getElementById('blinks-container');
  if (container) {
    container.appendChild(blink);
  }

  // –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
  setTimeout(() => {
    blink.remove();
  }, 2000);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –±–ª–∏–∫–∏ –∫–∞–∂–¥—ã–µ 300 –º—Å
setInterval(createBlink, 300);


// –ë–æ–∫–æ–≤–æ–µ

let selectedCursor = null;
let selectedPointer = null;

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
document.querySelectorAll(".tab").forEach(tab => {
  tab.addEventListener("click", () => {
    document.querySelectorAll(".tab").forEach(t => t.classList.remove("active"));
    tab.classList.add("active");

    const selected = tab.dataset.tab;
    document.querySelectorAll(".tab-content").forEach(content => {
      content.classList.remove("active");
    });
    document.querySelector(`.tab-${selected}`).classList.add("active");

    // üü£ –ù–æ–≤—ã–π –∫–æ–¥ ‚Äî –ø–æ–≤—Ç–æ—Ä–Ω–æ —Ñ–∏–ª—å—Ç—Ä—É–µ–º
    const input = document.getElementById('cursor-search');
    if (input) {
      const event = new Event('input');
      input.dispatchEvent(event);
    }
  });
});


// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
document.getElementById("open-cursor-menu").addEventListener("click", function (e) {
  e.preventDefault();
  document.getElementById("cursor-modal").style.display = "flex";
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
document.getElementById("close-cursor-modal").addEventListener("click", function () {
  document.getElementById("cursor-modal").style.display = "none";
});

// –í—ã–±–æ—Ä –∫—É—Ä—Å–æ—Ä–∞ –∏–ª–∏ –ø–æ–∏–Ω—Ç–µ—Ä–∞
document.querySelectorAll(".cursor-options").forEach(group => {
  group.addEventListener("click", (e) => {
    const target = e.target.closest(".cursor-option");
    if (!target) return;

    group.querySelectorAll(".cursor-option").forEach(opt => opt.classList.remove("selected"));
    target.classList.add("selected");

    const type = group.dataset.type;
    const img = target.querySelector("img");
    const name = img ? img.getAttribute("src") : null;

    if (type === "cursor") selectedCursor = name;
    if (type === "pointer") selectedPointer = name;
  });
});

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞
document.querySelector(".confirm-cursor").addEventListener("click", () => {
  if (selectedCursor) {
    localStorage.setItem('selectedCursor', selectedCursor);
    document.body.style.cursor = `url('${selectedCursor}'), auto`;
  }

  if (selectedPointer) {
    localStorage.setItem('selectedPointer', selectedPointer);

    const pointerTargets = document.querySelectorAll(
      "button, a, [role='button'], .clickable, .tool-card, .tab, .confirm-cursor"
    );
    pointerTargets.forEach(el => {
      el.style.cursor = `url('${selectedPointer}'), pointer`;
    });
  }

  document.getElementById("cursor-modal").style.display = "none";
});

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∫—É—Ä—Å–æ—Ä–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
window.addEventListener("DOMContentLoaded", () => {
  const savedCursor = localStorage.getItem('selectedCursor');
  const savedPointer = localStorage.getItem('selectedPointer');

  if (savedCursor) {
    document.body.style.cursor = `url('${savedCursor}'), auto`;
    selectedCursor = savedCursor;

    document.querySelectorAll('.tab-cursor .cursor-option').forEach(opt => {
      const img = opt.querySelector('img');
      opt.classList.toggle('selected', img && img.getAttribute("src") === savedCursor);
    });
  }

  if (savedPointer) {
    selectedPointer = savedPointer;

    const pointerTargets = document.querySelectorAll(
      "button, a, [role='button'], .clickable, .tool-card, .tab, .confirm-cursor"
    );
    pointerTargets.forEach(el => {
      el.style.cursor = `url('${savedPointer}'), pointer`;
    });

    document.querySelectorAll('.tab-pointer .cursor-option').forEach(opt => {
      const img = opt.querySelector('img');
      opt.classList.toggle('selected', img && img.getAttribute("src") === savedPointer);
    });
  }
});

// –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∫—É—Ä—Å–æ—Ä–∞
// –§—ñ–ª—å—Ç—Ä –∫—É—Ä—Å–æ—Ä—ñ–≤ –ø–æ –ø–æ—à—É–∫—É
document.getElementById('cursor-search').addEventListener('input', function () {
  const query = this.value.toLowerCase();
  const allOptions = document.querySelectorAll('.tab-content.active .cursor-option');

  allOptions.forEach(opt => {
    const text = opt.querySelector('p')?.textContent.toLowerCase() || '';
    if (text.includes(query)) {
      opt.classList.remove('hidden');
    } else {
      opt.classList.add('hidden');
    }
  });
});



// === –ß–∞—Å—Ç–∏—Ü—ã –ø–ª–∞–º–µ–Ω–∏ –≤–Ω—É—Ç—Ä–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ ===
function createFlameParticle() {
  const container = document.getElementById("cursor-particles");
  if (!container) return;

  const particle = document.createElement("div");
  particle.className = "cursor-particle";

  const x = Math.random() * container.offsetWidth;
  const y = Math.random() * 20 + (container.offsetHeight - 30); // —á—É—Ç—å —Å–Ω–∏–∑—É

  particle.style.left = `${x}px`;
  particle.style.top = `${y}px`;

  container.appendChild(particle);

  setTimeout(() => particle.remove(), 2000);
}

// –ó–∞–ø—É—Å–∫ —á–∞—Å—Ç–∏—Ü —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–æ–º –æ–∫–Ω–µ
setInterval(() => {
  const modal = document.getElementById("cursor-modal");
  if (modal && modal.style.display === "flex") {
    createFlameParticle();
  }
}, 150);
